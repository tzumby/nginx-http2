---
- name: Get current openssl version
  shell: openssl version | awk '{ print $2 }'
  register: current_openssl_version

- name: "Install dependencies"
  apt: name={{ item }} update_cache=yes state=present 
  become: true
  become_method: sudo
  with_items:
    - build-essential 
    - zlib1g-dev 
    - libpcre3 
    - libpcre3-dev 
    - unzip 
    - libxslt-dev 
    - libgeoip-dev 
    - libgd2-xpm-dev 
    - libperl-dev
  tags:
    - lua

- include: lua.yml
  when: include_lua is defined
  tags:
    - lua

- name: Extract archives
  unarchive: 
    src: "{{ item }}"
    copy: no 
    dest: "{{ destination }}"
  with_items:
    - "{{ nginx_source_url }}"
    - "{{ openssl_source_url }}"
    - "{{ nps_source_url }}"

- name: Download and extract Pagespeed library
  unarchive:
    src: "{{ pagespeed_source_url }}"
    copy: no
    dest: "{{ destination }}/{{nps}}"

- name: Openssl - compile and test
  command: chdir="{{destination}}/{{openssl}}" {{ item }}
  with_items:
    - ./config
    - make depend
    - make
    - make test

- name: Openssl - make install
  command: chdir="{{destination}}/{{openssl}}" make install
  become: true
  become_method: sudo

- name: Symlink new openssl
  become: true
  file:
    src: "{{destination}}/{{openssl}}/apps/openssl"
    dest: /usr/bin/openssl
    state: link

- name: Openssl - move openssl binary
  become: true
  become_method: sudo
  command: "mv /usr/bin/openssl /usr/bin/openssl_{{ current_openssl_version.stdout}}" 

- name: Nginx - configure & make
  command: chdir="{{ destination }}/{{ nginx }}" {{ item }}
  with_items:
    - ./configure {{ nginx_flags }}
    - make

- name: Nginx - make install
  become: true
  become_method: sudo
  command: chdir="{{ destination }}/{{ nginx }}" make install

- name: Create folder for Strong Diffie key
  become: true
  file:
    state: directory
    path: "{{ dhparam_path }}"
  when: generate_dhparam == true
  tags:
    - cmd

- name: Generate Strong Diffie-Hellman Group
  become: true
  command: "openssl dhparam -out {{ dhparam_path }}/dhparam.pem 2048"
  when: generate_dhparam == true
  tags:
    - cmd

- name: Copy nginx.conf template
  become: true
  become_method: sudo
  template:
    src: nginx.conf
    dest: /etc/nginx/nginx.conf

- name: Copy nginx systemd template
  become: true
  become_method: sudo
  template:
    src: nginx.service
    dest: /lib/systemd/system/nginx.service 

- name: Create /var/cache/nginx folder
  become: true
  become_method: sudo
  file:
    state: directory
    path: /var/cache/nginx

- name: Create sites-enabled and sites-available folders
  become: true
  file:
    state: directory
    path: "{{ item }}"
  with_items:
    - /etc/nginx/sites-enabled
    - /etc/nginx/sites-available

- name: Copy default.conf vhost template
  become: true
  template:
    src: default.conf.j2
    dest: /etc/nginx/sites-available/default.conf
  tags:
    - cmd

- name: Symlink default.conf vhost
  become: true
  file:
    src: /etc/nginx/sites-available/default.conf
    dest: /etc/nginx/sites-enabled/default.conf
    state: link

- name: Reload systemdb and start nginx.service
  become: true
  command: "{{ item }}"
  with_items:
    - systemctl daemon-reload
    - systemctl enable nginx.service
    - systemctl start nginx.service
